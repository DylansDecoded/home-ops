
---
clusterName: &cluster main

# Kubernetes Pods Cluster/Service Network CIDR & Disable built-in Flannel to use Cilium
clusterPodNets:
  - 10.42.0.0/16
clusterSvcNets:
  - 10.43.0.0/16

endpoint: https://10.1.20.120:6443

# renovate: depName=ghcr.io/buroa/installer datasource=docker
talosVersion: v1.8.2
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.31.2


additionalApiServerCertSans: &sans
  - 10.1.20.120
  - 127.0.0.1

additionalMachineCertSans: *sans

cniConfig:
  name: none

nodes:
  - hostname: k8s-0
    ipAddress: 10.1.20.10
    controlPlane: true
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: eth0
      # - deviceSelector:
      #     hardwareAddr: 10:62:e5:00:4c:12
        dhcp: true
        mtu: 9000
        vip:
          ip: 10.1.20.120
        vlans:
          - vlanId: 30 # VPN/SERVICES
            dhcp: false
            mtu: 1500


  - hostname: k8s-1
    ipAddress: 10.1.20.11
    installDisk: /dev/nvme0n1
    controlPlane: true
    networkInterfaces:
      - interface: eth0
      # - deviceSelector:
      #     hardwareAddr: 18:60:24:27:27:a7
        dhcp: true
        mtu: 9000
        vip:
          ip: 10.1.20.120
        vlans:
          - vlanId: 30 # VPN/SERVICES
            dhcp: false
            mtu: 1500

  - hostname: k8s-2
    ipAddress: 10.1.20.12
    installDisk: /dev/nvme0n1
    controlPlane: true
    networkInterfaces:
      - interface: eth0
      # - deviceSelector:
      #     hardwareAddr: ac:e2:d3:0d:60:f0
        dhcp: true
        mtu: 9000
        vip:
          ip: 10.1.20.120
        vlans:
          - vlanId: 30 # VPN/SERVICES
            dhcp: false
            mtu: 1500

  - hostname: k8s-3
    ipAddress: 10.1.20.13
    installDisk: /dev/nvme0n1
    controlPlane: false
    networkInterfaces:
      - interface: eth0
      # - deviceSelector:
      #     hardwareAddr: ac:e2:d3:10:d8:25
        dhcp: true
        vlans:
          - vlanId: 30 # VPN/SERVICES
            dhcp: false
            mtu: 1500

  - hostname: k8s-4
    ipAddress: 10.1.20.14
    installDisk: /dev/nvme0n1
    controlPlane: false
    networkInterfaces:
      - interface: eth0
      # - deviceSelector:
      #     hardwareAddr: ac:e2:d3:15:fd:f9
        dhcp: true
        mtu: 9000
        vlans:
          - vlanId: 30 # VPN/SERVICES
            dhcp: false
            mtu: 1500

  - hostname: k8s-5
    ipAddress: 10.1.20.15
    installDisk: /dev/nvme0n1
    controlPlane: false
    networkInterfaces:
      - interface: eth0
      # - deviceSelector:
      #     hardwareAddr: 10:62:E5:1A:80:18
      #   dhcp: true
        mtu: 9000
        vlans:
          - vlanId: 30 # VPN/SERVICES
            dhcp: false
            mtu: 1500

controlPlane:
  schematic:
    customization:
      systemExtensions:
          officialExtensions:
              - siderolabs/gasket-driver
              - siderolabs/i915-ucode
              - siderolabs/intel-ucode
              - siderolabs/mei

  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: m

  patches:
    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - &discoveryPatch |-
      cluster:
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true

    # Generic Features all Nodes
    - &featuresPatch |-
      machine:
        features:
          rbac: true
          stableHostname: true
          apidCheckExtKeyUsage: true
          diskQuotaSupport: true
          kubePrism:
            enabled: true
            port: 7445
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false # Incompatible with Cilium bpf masquerade

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            rotate-server-certificates: "true"
          extraMounts:
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options: ["bind", "rshared", "rw"]
          defaultRuntimeSeccompProfileEnabled: true
          nodeIP:
            validSubnets:
              - 10.1.20.0/24

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445


    # Configure NFS mount options
    - &nfsPatch |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              async=True
              hard=True
              nconnect=4
              noatime=True
              rsize=1048576
              wsize=1048576

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          net.core.netdev_max_backlog: 30000
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_window_scaling: 1

    - &sysfsPatch |-
      machine:
        sysfs:
          block.nvme0n1.queue.scheduler: none
          devices.system.cpu.cpufreq.boost: 0


    # Custom Talos installer patch
    - &talosPatch |-
      machine:
        install:
          extraKernelArgs:
            - cpufreq.default_governor=performance
            - intel_pstate=disable
            - mitigations=off

    # Various udev rules
    - &udevPatch |-
      machine:
        udev:
          rules:
            # Thunderbolt
            - ACTION=="add", SUBSYSTEM=="thunderbolt", ATTR{authorized}=="0", ATTR{authorized}="1"
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
            # Google Coral USB Accelerator
            - SUBSYSTEMS=="usb", ATTRS{idVendor}=="1a6e", ATTRS{idProduct}=="089a", GROUP="20", MODE="0660"
            - SUBSYSTEMS=="usb", ATTRS{idVendor}=="18d1", ATTRS{idProduct}=="9302", GROUP="20", MODE="0660"

    #

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 10.1.20.0/24

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - system-upgrade


worker:
  schematic:
    customization:
      systemExtensions:
          officialExtensions:
              - siderolabs/gasket-driver
              - siderolabs/i915-ucode
              - siderolabs/intel-ucode
              - siderolabs/mei
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: w

  patches:
    - *containerdPatch
    - *disableSearchDomainPatch
    - *discoveryPatch
    - *featuresPatch
    - *kubeletPatch
    - *kubePrismPatch
    - *nfsPatch
    - *sysctlPatch
    - *sysfsPatch
    - *talosPatch
    - *udevPatch


